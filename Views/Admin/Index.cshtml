@model Dream_Bridge.Models.IndexViewModel
@{
    Layout = "_AdminLayout"; // Sử dụng layout admin
}
<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        .active {
            background-color: rgba(255, 255, 255, 0.2);
            transition: background-color 0.3s ease;
        }

        a {
            transition: background-color 0.3s ease;
            width: 100%;
        }
    </style>
</head>

<body class="bg-gray-100 min-h-screen">

    <div class="flex w-[90%] bg-white shadow-lg overflow-hidden">
        <!-- Div lớn chứa các icon -->
        <div
            class="group relative flex h-[900px] w-[50px] flex-col items-start bg-green-500 transition-all duration-500 ease-in-out hover:w-[200px]">
            <a href="/Admin"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">home</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">Tổng
                    Quan</span>
            </a>
            <a href="/qltruong"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">school</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">QL
                    Trường</span>
            </a>
            <a href="/qltuvan"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">help_outline</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">QL
                    Tư vấn</span>
            </a>
            <a href="/qlduhoc"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">public</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">Danh
                    mục du học</span>
            </a>
            <a href="/qltintuc"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">announcement</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">QL
                    Tin tức</span>
            </a>
            <a href="/qltaikhoan"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">account_circle</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">QL
                    Tài khoản</span>
            </a>
            <a href="/qlchat"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">chat</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">QL
                    Chat</span>
            </a>
            <a href="/qltruycap"
                class="flex items-center relative pl-3 h-[50px] w-[50px] text-white transition-all duration-500 ease-in-out group-hover:w-[200px]">
                <span class="material-icons text-2xl">visibility</span>
                <span
                    class="ml-2 whitespace-nowrap opacity-0 transition-opacity duration-500 ease-in-out group-hover:opacity-100">QL
                    Truy Cập</span>
            </a>
        </div>

        <!-- Nội dung bảng điều khiển -->
        <div class="w-full p-6 w-screen">
            <h1 class="text-2xl font-bold mb-4">Dashboard Thống Kê</h1>

            <!-- Thống kê -->
            <div class="grid grid-cols-3 gap-6 mb-6">
                <!-- Số lượt truy cập -->
                <div class="bg-blue-100 shadow-md rounded-lg p-6 text-center">
                    <h2 class="text-xl font-bold text-blue-600">Số lượt đăng ký tài khoản</h2>
                    <p class="text-3xl text-blue-500 mt-2">@Model.Users?.Count()</p>
                </div>

                <!-- Số lượt gửi email tư vấn -->
                <div class="bg-green-100 shadow-md rounded-lg p-6 text-center">
                    <h2 class="text-xl font-bold text-green-600">Số lượt đăng ký tư vấn</h2>
                    <p class="text-3xl text-green-500 mt-2">@Model.ConsultingRegistrations?.Count()</p>
                </div>

                <!-- Danh sách các trường -->
                <div class="bg-purple-100 shadow-md rounded-lg p-6 text-center">
                    <h2 class="text-xl font-bold text-purple-600 mb-2">Số lượng trường</h2>
                    <p class="text-3xl text-purple-600 mt-2">@Model.Schools?.Count()</p>

                </div>
            </div>
            <!-- Form gửi thông báo -->
            @* <div class="mt-6 bg-white p-6 shadow-md rounded-lg">
            <h2 class="text-2xl font-bold text-green-600 mb-4">Gửi Thông Báo</h2>

            <form id="sendNotificationForm" onsubmit="sendNotification(event)">
            <div class="mb-4">
            <label for="title" class="block text-sm font-medium text-gray-700">Tiêu đề:</label>
            <input type="text" id="title" name="title"
            class="w-full mt-2 p-2 border border-gray-300 rounded-md" required />
            </div>
            <div class="mb-4">
            <label for="message" class="block text-sm font-medium text-gray-700">Nội dung:</label>
            <textarea id="message" name="message" class="w-full mt-2 p-2 border border-gray-300 rounded-md"
            rows="4" required></textarea>
            </div>
            <div>
            <button type="submit" class="bg-blue-500 text-white p-2 rounded-md">Gửi Thông Báo</button>
            </div>
            </form>
            </div>
            <div id="loadingIndicator" style="display:none;">Đang gửi thông báo...</div> *@
            <!-- Phần chứa tiêu đề và form -->
            <div id="notificationContainer" class="fixed bottom-4 right-4 w-64 bg-white p-2 shadow-md rounded-lg z-10">
                <!-- Tiêu đề hiển thị có thể click -->
                <div id="toggleNotificationForm" class="cursor-pointer p-2 bg-green-600 text-white rounded-lg">
                    <h2 class="text-lg font-bold">Thêm Thông Báo</h2>
                </div>

                <!-- Form gửi thông báo, ẩn mặc định -->
                <div id="sendNotificationFormContainer" class="hidden mt-2">
                    <form id="sendNotificationForm" onsubmit="sendNotification(event)">
                        <div class="mb-2">
                            <label for="title" class="block text-sm font-medium text-gray-700">Tiêu đề:</label>
                            <input type="text" id="title" name="title"
                                class="w-full mt-1 p-1 border border-gray-300 rounded-md" required />
                        </div>
                        <div class="mb-2">
                            <label for="message" class="block text-sm font-medium text-gray-700">Nội dung:</label>
                            <textarea id="message" name="message"
                                class="w-full mt-1 p-1 border border-gray-300 rounded-md" rows="3" required></textarea>
                        </div>
                        <div>
                            <button type="submit" class="bg-blue-500 text-white p-2 rounded-md w-full">Gửi Thông
                                Báo</button>
                        </div>
                    </form>
                </div>
            </div>


            <!-- Danh sách Người dùng -->
            <h1 class="text-xl font-bold mb-4">Danh sách Email đã gửi</h1>
            <div class="overflow-x-auto">
                <table class="min-w-full bg-white shadow-md rounded-lg">
                    <thead>
                        <tr class="bg-gray-200 text-gray-600 uppercase text-sm leading-normal">
                            <th class="py-3 px-6 text-left">STT</th>
                            <th class="py-3 px-6 text-left">Đến Email</th>
                            <th class="py-3 px-6 text-left">Chủ đề</th>
                            <th class="py-3 px-6 text-left">Nội dung</th>
                            <th class="py-3 px-6 text-left">Thời gian gửi</th>
                        </tr>
                    </thead>
                    <tbody class="text-gray-600 text-sm font-light">
                        @for (int i = 0; i < Model.EmailHistories.Count; i++)
                        {
                            <tr class="border-b border-gray-300 hover:bg-gray-100">
                                <td class="py-3 px-6">@i </td>
                                <td class="py-3 px-6">@Model.EmailHistories[i].ToEmail</td>
                                <td class="py-3 px-6">@Model.EmailHistories[i].Subject</td>
                                <td class="py-3 px-6">@Model.EmailHistories[i].Body</td>
                                <td class="py-3 px-6">@Model.EmailHistories[i].SentAt</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>

    </div>

    <script>

        document.getElementById('toggleNotificationForm').addEventListener('click', function () {
            const formContainer = document.getElementById('sendNotificationFormContainer');
            formContainer.classList.toggle('hidden'); // Ẩn hoặc hiện form khi click vào tiêu đề
        });

        function sendNotification(event) {
            event.preventDefault(); // Ngăn form submit mặc định

            // Lấy dữ liệu từ form
            const title = document.getElementById('title').value;
            const message = document.getElementById('message').value;

            // Thực hiện gửi thông báo (bạn có thể thay đổi thành gửi API)
            console.log('Gửi thông báo:', { title, message });

            // Ẩn form sau khi gửi
            document.getElementById('sendNotificationFormContainer').classList.add('hidden');

            // Reset form
            document.getElementById('sendNotificationForm').reset();
        }


        document.getElementById('loadingIndicator').style.display = 'block';
        // Khi hoàn tất hoặc lỗi:
        document.getElementById('loadingIndicator').style.display = 'none';

        async function sendNotification(event) {
            event.preventDefault();  // Ngừng hành động mặc định của form

            // Lấy dữ liệu từ form
            const title = document.getElementById('title').value;
            const message = document.getElementById('message').value;

            // Tạo dữ liệu thông báo
            const notificationData = {
                title: title,
                message: message
            };

            try {
                // Gửi yêu cầu POST tới API backend
                const response = await fetch('/api/admin/send-notification', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(notificationData)
                });

                if (response.ok) {
                    const result = await response.json();
                    alert(`Thông báo đã được gửi: ${result.message}`);
                } else {
                    const errorData = await response.json();
                    alert(`Gửi thông báo không thành công: ${errorData.message}`);
                }

            } catch (error) {
                console.error('Có lỗi xảy ra khi gửi thông báo:', error);
                alert('Đã xảy ra lỗi khi gửi thông báo.');
            }
        }

    </script>

</body>

</html>
