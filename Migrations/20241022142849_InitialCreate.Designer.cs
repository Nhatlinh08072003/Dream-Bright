// <auto-generated />
using System;
using Dream_Bridge.Models.Main;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dream_Bridge.Migrations
{
    [DbContext(typeof(StudyAbroadDbContext))]
    [Migration("20241022142849_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dream_Bridge.Models.Main.ChatMessage", b =>
                {
                    b.Property<int>("IdMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMessage"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("IdMessage")
                        .HasName("PK__ChatMess__47AAF3043C702C38");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.Comment", b =>
                {
                    b.Property<int>("IdComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComment"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdNews")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int?>("IdVisaService")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("IdComment")
                        .HasName("PK__Comments__57C9AD582E41940E");

                    b.HasIndex("IdNews");

                    b.HasIndex("IdUser");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.ConsultingRegistration", b =>
                {
                    b.Property<int>("IdConsulting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConsulting"));

                    b.Property<string>("ConsultingType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("Study abroad consulting");

                    b.Property<string>("ContentConsulting")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("Study in USA");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("chua tu v?n");

                    b.HasKey("IdConsulting")
                        .HasName("PK__Consulti__67487AA91F357E45");

                    b.ToTable("Consulting_Registration", (string)null);
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.News", b =>
                {
                    b.Property<int>("IdNews")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNews"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NewsContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewsImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TitleNews")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdNews")
                        .HasName("PK__News__4559C72DAD5F8D18");

                    b.HasIndex("IdUser");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.School", b =>
                {
                    b.Property<int>("IdSchool")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSchool"));

                    b.Property<decimal>("AverageTuition")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Average_tuition");

                    b.Property<int>("IdcategoryStab")
                        .HasColumnType("int");

                    b.Property<string>("ImageSchool")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SchoolDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("School_description");

                    b.Property<string>("StateCity")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("State_City");

                    b.Property<string>("TitleSchool")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdSchool")
                        .HasName("PK__School__B544508521507AE2");

                    b.HasIndex("IdcategoryStab");

                    b.ToTable("School", (string)null);
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.StudyAbroadCatalog", b =>
                {
                    b.Property<int>("IdcategoryStab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdcategoryStab"));

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("NamecategoryStab")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdcategoryStab")
                        .HasName("PK__Study_ab__2CD6C429BF218044");

                    b.HasIndex("IdUser");

                    b.ToTable("Study_abroad_catalog", (string)null);
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConsultingStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("chua tu v?n");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsConsultant")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("user");

                    b.HasKey("IdUser")
                        .HasName("PK__User__B7C92638A1EA2A1D");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D10534A39E0728")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("EmailHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmailHistories");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.ChatMessage", b =>
                {
                    b.HasOne("Dream_Bridge.Models.Main.User", "Receiver")
                        .WithMany("ChatMessageReceivers")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK__ChatMessa__Recei__6754599E");

                    b.HasOne("Dream_Bridge.Models.Main.User", "Sender")
                        .WithMany("ChatMessageSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__ChatMessa__Sende__66603565");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.Comment", b =>
                {
                    b.HasOne("Dream_Bridge.Models.Main.News", "IdNewsNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdNews")
                        .HasConstraintName("FK__Comments__IdNews__628FA481");

                    b.HasOne("Dream_Bridge.Models.Main.User", "IdUserNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Comments__IdUser__619B8048");

                    b.Navigation("IdNewsNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.News", b =>
                {
                    b.HasOne("Dream_Bridge.Models.Main.User", "IdUserNavigation")
                        .WithMany("News")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__News__IdUser__5CD6CB2B");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.School", b =>
                {
                    b.HasOne("Dream_Bridge.Models.Main.StudyAbroadCatalog", "IdcategoryStabNavigation")
                        .WithMany("Schools")
                        .HasForeignKey("IdcategoryStab")
                        .IsRequired()
                        .HasConstraintName("FK__School__Idcatego__59063A47");

                    b.Navigation("IdcategoryStabNavigation");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.StudyAbroadCatalog", b =>
                {
                    b.HasOne("Dream_Bridge.Models.Main.User", "IdUserNavigation")
                        .WithMany("StudyAbroadCatalogs")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__Study_abr__IdUse__5629CD9C");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.News", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.StudyAbroadCatalog", b =>
                {
                    b.Navigation("Schools");
                });

            modelBuilder.Entity("Dream_Bridge.Models.Main.User", b =>
                {
                    b.Navigation("ChatMessageReceivers");

                    b.Navigation("ChatMessageSenders");

                    b.Navigation("Comments");

                    b.Navigation("News");

                    b.Navigation("StudyAbroadCatalogs");
                });
#pragma warning restore 612, 618
        }
    }
}
